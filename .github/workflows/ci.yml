name: CI/CD Pipeline

on:
  push:
    branches: [ main, develop ]
  pull_request:
    branches: [ main, develop ]

jobs:
  test:
    name: Test
    runs-on: ubuntu-latest

    services:
      postgres:
        image: postgres:15-alpine
        env:
          POSTGRES_USER: postgres
          POSTGRES_PASSWORD: postgres
          POSTGRES_DB: medical_platform_test
        ports:
          - 5432:5432
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5

    steps:
      - uses: actions/checkout@v3

      - name: Setup Node.js
        uses: actions/setup-node@v3
        with:
          node-version: '18'
          cache: 'npm'

      - name: Install dependencies
        run: npm ci

      - name: Setup database
        env:
          DB_USER: postgres
          DB_HOST: localhost
          DB_NAME: medical_platform_test
          DB_PASSWORD: postgres
          DB_PORT: 5432
          JWT_SECRET: test-secret-key
          NODE_ENV: test
        run: |
          npm run setup-db

      - name: Run linter
        run: npm run lint

      - name: Run tests
        env:
          DB_USER: postgres
          DB_HOST: localhost
          DB_NAME: medical_platform_test
          DB_PASSWORD: postgres
          DB_PORT: 5432
          JWT_SECRET: test-secret-key
          NODE_ENV: test
          PORT: 5001
        run: npm test

      - name: Upload coverage
        uses: codecov/codecov-action@v3
        with:
          files: ./coverage/lcov.info
          flags: unittests
          name: codecov-umbrella
          fail_ci_if_error: false

  security:
    name: Security Audit
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v3

      - name: Setup Node.js
        uses: actions/setup-node@v3
        with:
          node-version: '18'

      - name: Install dependencies
        run: npm ci

      - name: Run security audit
        run: npm audit --production
        continue-on-error: true

  build:
    name: Build Docker Image
    runs-on: ubuntu-latest
    needs: [test, security]
    if: github.event_name == 'push' && (github.ref == 'refs/heads/main' || github.ref == 'refs/heads/develop')

    steps:
      - uses: actions/checkout@v3

      - name: Build Docker image
        run: docker build -t medical-platform-api:${{ github.sha }} .

      - name: Test Docker image
        run: |
          docker run -d --name test-container -p 5000:5000 \
            -e DB_HOST=host.docker.internal \
            -e DB_USER=postgres \
            -e DB_PASSWORD=postgres \
            -e DB_NAME=medical_platform \
            -e JWT_SECRET=test-secret \
            medical-platform-api:${{ github.sha }}
          sleep 10
          docker logs test-container
          docker stop test-container
